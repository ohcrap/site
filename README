This is a customized LAMP stack setup using Ansible configuration tool.

Setup is being run with the tollowing command:

ansible-playbook -i hosts site.yml -v -k 

-i defines the hosts inventory file
-v is for verbose output
-k is to ask for sudo password. It's not necessary if the ssh key has already been copied to the hosts. 

Also, if no previous connection to the hosts has been made, we can avoid the host key checking by running
  
  export ANSIBLE_HOST_KEY_CHECKING=False 
  
  while running the playbook, and afterwards revert it with
  
  unset ANSIBLE_HOST_KEY_CHECKING

Directory tree:
.
├── hosts
├── roles
│   ├── apache
│   │   ├── handlers
│   │   │   └── main.yml
│   │   ├── tasks
│   │   │   └── main.yml
│   │   └── templates
│   │       ├── httpd.conf.j2
│   │       └── ssl.conf.j2
│   ├── common
│   │   ├── tasks
│   │   │   └── main.yml
│   │   └── templates
│   │       └── hosts.j2
│   ├── haproxy
│   │   ├── handlers
│   │   │   └── main.yml
│   │   ├── tasks
│   │   │   └── main.yml
│   │   └── templates
│   │       └── haproxy.cfg.j2
│   └── mysql
│       ├── handlers
│       │   └── main.yml
│       └── tasks
│           └── main.yml
└── site.yml

ROLES:

1. apache
 
 - Installs Apache HTTPD package on two webserver nodes
 - Installs PHP + MySQL support for PHP-enabled sites with MySQL DB backends
 - Installs Git support for storing PHP code on Github
 - Installs mod_ssl for SSL site setup, also disabling HTTP for increased security
 
2. common

 - Installs and starts the NTP service
 - Disables SELinux
 - Makes sure Firewall is up and running
 - Dynamically configures /etc/hosts file adding host information from ansible hosts file

3. haproxy

 - Install HAProxy and socat packages
 - Sets up the SSL LB frontend
 - Configures Apache backends based on the information from ansible hosts file
 - Configures HAProxy stats page (port 81) for backend monitoring - http://haproxy_url:81/stats (ha/ha)
 - Redirects HTTP requests to HTTPS

4. mysql

 - Adds MySQL repo (as Centos is now using MariaDB)
 - Installs MySQL community server package + python support
 - Creates a test user which our PHP script will use for connection testing

To confirm the setup is working, we should open the HAProxy LB URL: 

https://haproxy_url   

(we can also use http://haproxy_url confirming the SSL redirect is working properly)
after which the index.php test page would open showing the "Connected successfully", showing that we can connect to the database backend.

Tested on CentOS 7.1

Additional:

To confirm the PHP code fetch from Github is working properly, 
we can change the connection parameters in the index.php test script and run the following:

ansible-playbook -i hosts site.yml -v -k --tags git

This will only run the tagged part of the playbook, which in this case is git pull of the updated PHP code.
